{"ast":null,"code":"import _regeneratorRuntime from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createClass from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _classCallCheck from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import React from\"react\";var StreamlitAudioRecorder=/*#__PURE__*/function(_StreamlitComponentBa){_inherits(StreamlitAudioRecorder,_StreamlitComponentBa);var _super=_createSuper(StreamlitAudioRecorder);function StreamlitAudioRecorder(props){var _this;_classCallCheck(this,StreamlitAudioRecorder);_this=_super.call(this,props);_this.chunks=[];_this.startRecording=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var stream,mediaRecorder;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return navigator.mediaDevices.getUserMedia({audio:{channelCount:1,sampleRate:44100,echoCancellation:true,noiseSuppression:true,autoGainControl:true}});case 3:stream=_context.sent;mediaRecorder=new MediaRecorder(stream,{mimeType:'audio/webm',audioBitsPerSecond:128000});_this.chunks=[];// Reset chunks before starting new recording\nmediaRecorder.ondataavailable=function(e){if(e.data.size>0){_this.chunks.push(e.data);}};mediaRecorder.onstop=function(){var blob=new Blob(_this.chunks,{type:'audio/webm'});var reader=new FileReader();reader.onload=function(){if(reader.result instanceof ArrayBuffer){// Send the binary data immediately\nStreamlit.setComponentValue(new Uint8Array(reader.result));}};// Start reading the blob as soon as it's created\nreader.readAsArrayBuffer(blob);// Update UI immediately with the blob for playback\n_this.setState({audioBlob:blob,isRecording:false,mediaRecorder:null});};mediaRecorder.start(100);// Collect chunks more frequently\n_this.setState({mediaRecorder:mediaRecorder,isRecording:true});_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error(\"Error accessing microphone:\",_context.t0);Streamlit.setComponentValue(null);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));_this.stopRecording=function(){if(_this.state.mediaRecorder&&_this.state.isRecording){_this.state.mediaRecorder.stop();_this.state.mediaRecorder.stream.getTracks().forEach(function(track){return track.stop();});}};_this.resetRecording=function(){if(_this.state.mediaRecorder){_this.state.mediaRecorder.stream.getTracks().forEach(function(track){return track.stop();});}_this.chunks=[];_this.setState({isRecording:false,audioBlob:null,mediaRecorder:null});Streamlit.setComponentValue(null);};_this.render=function(){var theme=_this.props.theme;var style={};if(theme){var borderStyling=\"1px solid \".concat(_this.state.isRecording?theme.primaryColor:\"gray\");style.border=borderStyling;style.outline=borderStyling;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{id:\"record\",onClick:_this.state.isRecording?_this.stopRecording:_this.startRecording,style:style},_this.state.isRecording?'Stop Recording':'Start Recording'),/*#__PURE__*/React.createElement(\"button\",{id:\"reset\",onClick:_this.resetRecording,style:style},\"Reset\"),_this.state.audioBlob&&/*#__PURE__*/React.createElement(\"audio\",{id:\"audio\",controls:true,src:URL.createObjectURL(_this.state.audioBlob)}));};_this.state={isRecording:false,mediaRecorder:null,audioBlob:null};return _this;}return _createClass(StreamlitAudioRecorder);}(StreamlitComponentBase);export default withStreamlitConnection(StreamlitAudioRecorder);Streamlit.setComponentReady();Streamlit.setFrameHeight();","map":{"version":3,"sources":["/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/src/StreamlitAudioRecorder.tsx"],"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","StreamlitAudioRecorder","props","chunks","startRecording","navigator","mediaDevices","getUserMedia","audio","channelCount","sampleRate","echoCancellation","noiseSuppression","autoGainControl","stream","mediaRecorder","MediaRecorder","mimeType","audioBitsPerSecond","ondataavailable","e","data","size","push","onstop","blob","Blob","type","reader","FileReader","onload","result","ArrayBuffer","setComponentValue","Uint8Array","readAsArrayBuffer","setState","audioBlob","isRecording","start","console","error","stopRecording","state","stop","getTracks","forEach","track","resetRecording","render","theme","style","borderStyling","primaryColor","border","outline","URL","createObjectURL","setComponentReady","setFrameHeight"],"mappings":"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","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\ninterface State {\n  isRecording: boolean\n  mediaRecorder: MediaRecorder | null\n  audioBlob: Blob | null\n}\n\nclass StreamlitAudioRecorder extends StreamlitComponentBase {\n  private chunks: Blob[] = [];\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      isRecording: false,\n      mediaRecorder: null,\n      audioBlob: null\n    }\n  }\n\n  startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          channelCount: 1,\n          sampleRate: 44100,\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      })\n\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'audio/webm',\n        audioBitsPerSecond: 128000\n      })\n\n      this.chunks = [];  // Reset chunks before starting new recording\n\n      mediaRecorder.ondataavailable = (e: BlobEvent) => {\n        if (e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      }\n\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(this.chunks, { type: 'audio/webm' });\n        const reader = new FileReader();\n        \n        reader.onload = () => {\n          if (reader.result instanceof ArrayBuffer) {\n            // Send the binary data immediately\n            Streamlit.setComponentValue(new Uint8Array(reader.result));\n          }\n        };\n        \n        // Start reading the blob as soon as it's created\n        reader.readAsArrayBuffer(blob);\n        \n        // Update UI immediately with the blob for playback\n        this.setState({ \n          audioBlob: blob,\n          isRecording: false,\n          mediaRecorder: null\n        });\n      }\n\n      mediaRecorder.start(100);  // Collect chunks more frequently\n      this.setState({ mediaRecorder, isRecording: true });\n\n    } catch (err) {\n      console.error(\"Error accessing microphone:\", err);\n      Streamlit.setComponentValue(null);\n    }\n  }\n\n  stopRecording = () => {\n    if (this.state.mediaRecorder && this.state.isRecording) {\n      this.state.mediaRecorder.stop();\n      this.state.mediaRecorder.stream.getTracks().forEach((track: MediaStreamTrack) => track.stop());\n    }\n  }\n\n  resetRecording = (): void => {\n    if (this.state.mediaRecorder) {\n      this.state.mediaRecorder.stream.getTracks().forEach((track: MediaStreamTrack) => track.stop());\n    }\n    this.chunks = [];\n    this.setState({\n      isRecording: false,\n      audioBlob: null,\n      mediaRecorder: null\n    });\n    Streamlit.setComponentValue(null);\n  }\n\n  public render = (): ReactNode => {\n    const theme = this.props.theme;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isRecording ? theme.primaryColor : \"gray\"\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return (\n      <div>\n        <button \n          id=\"record\" \n          onClick={this.state.isRecording ? this.stopRecording : this.startRecording}\n          style={style}\n        >\n          {this.state.isRecording ? 'Stop Recording' : 'Start Recording'}\n        </button>\n        <button \n          id=\"reset\" \n          onClick={this.resetRecording} \n          style={style}\n        >\n          Reset\n        </button>\n        {this.state.audioBlob && (\n          <audio\n            id=\"audio\"\n            controls\n            src={URL.createObjectURL(this.state.audioBlob)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStreamlitConnection(StreamlitAudioRecorder);\n\nStreamlit.setComponentReady();\nStreamlit.setFrameHeight();\n"]},"metadata":{},"sourceType":"module"}