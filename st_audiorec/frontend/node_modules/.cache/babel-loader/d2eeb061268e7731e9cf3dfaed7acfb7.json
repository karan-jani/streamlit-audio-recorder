{"ast":null,"code":"import _regeneratorRuntime from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import React from\"react\";var StreamlitAudioRecorder=/*#__PURE__*/function(_StreamlitComponentBa){_inherits(StreamlitAudioRecorder,_StreamlitComponentBa);var _super=_createSuper(StreamlitAudioRecorder);function StreamlitAudioRecorder(props){var _this;_classCallCheck(this,StreamlitAudioRecorder);_this=_super.call(this,props);_this.canvasRef=void 0;_this.drawWaveform=function(){if(_this.state.analyser&&_this.canvasRef.current){var canvas=_this.canvasRef.current;var canvasCtx=canvas.getContext('2d');var bufferLength=_this.state.analyser.frequencyBinCount;var dataArray=new Uint8Array(bufferLength);var draw=function draw(){if(!_this.state.isRecording){if(_this.state.animationId){cancelAnimationFrame(_this.state.animationId);}return;}var animationId=requestAnimationFrame(draw);_this.setState({animationId:animationId});_this.state.analyser.getByteTimeDomainData(dataArray);if(canvasCtx){canvasCtx.fillStyle='rgb(200, 200, 200)';canvasCtx.fillRect(0,0,canvas.width,canvas.height);canvasCtx.lineWidth=2;canvasCtx.strokeStyle='rgb(0, 0, 0)';canvasCtx.beginPath();var sliceWidth=canvas.width*1.0/bufferLength;var x=0;for(var i=0;i<bufferLength;i++){var v=dataArray[i]/128.0;var y=v*canvas.height/2;if(i===0){canvasCtx.moveTo(x,y);}else{canvasCtx.lineTo(x,y);}x+=sliceWidth;}canvasCtx.lineTo(canvas.width,canvas.height/2);canvasCtx.stroke();}};draw();}};_this.startRecording=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var stream,audioContext,source,analyser,mediaRecorder;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return navigator.mediaDevices.getUserMedia({audio:{channelCount:1,sampleRate:44100,echoCancellation:true,noiseSuppression:true,autoGainControl:true}});case 3:stream=_context.sent;audioContext=new AudioContext();source=audioContext.createMediaStreamSource(stream);analyser=audioContext.createAnalyser();source.connect(analyser);mediaRecorder=new MediaRecorder(stream,{mimeType:'audio/webm;codecs=opus',audioBitsPerSecond:128000});mediaRecorder.ondataavailable=function(e){if(e.data.size>0){_this.setState(function(prev){return{chunks:[].concat(_toConsumableArray(prev.chunks),[e.data])};});}};mediaRecorder.onstop=function(){var blob=new Blob(_this.state.chunks,{type:'audio/webm;codecs=opus'});// Update UI state\n_this.setState({chunks:[],audioBlob:blob,isRecording:false,mediaRecorder:null,audioUrl:URL.createObjectURL(blob)});// Convert to array and send in original format\nblob.arrayBuffer().then(function(buffer){var uint8Array=new Uint8Array(buffer);Streamlit.setComponentValue({arr:Object.fromEntries(_toConsumableArray(uint8Array.entries()))});});};mediaRecorder.start(100);_this.setState({mediaRecorder:mediaRecorder,isRecording:true,analyser:analyser},_this.drawWaveform);_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.error(\"Error accessing microphone:\",_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));_this.stopRecording=function(){if(_this.state.mediaRecorder&&_this.state.isRecording){_this.state.mediaRecorder.stop();_this.state.mediaRecorder.stream.getTracks().forEach(function(track){return track.stop();});if(_this.state.animationId){cancelAnimationFrame(_this.state.animationId);}}};_this.resetRecording=function(){if(_this.state.animationId){cancelAnimationFrame(_this.state.animationId);}_this.setState({isRecording:false,audioBlob:null,chunks:[],audioUrl:null,audioData:null,analyser:null,animationId:null});Streamlit.setComponentValue(null);};_this.downloadRecording=function(){if(_this.state.audioBlob){var datetime=new Date().toLocaleString().replace(/[\\s,]/g,'').replace(/_/g,'');var filename=\"streamlit_audio_\".concat(datetime,\".webm\");var a=document.createElement('a');a.style.display='none';a.href=URL.createObjectURL(_this.state.audioBlob);a.download=filename;document.body.appendChild(a);a.click();document.body.removeChild(a);}};_this.render=function(){var theme=_this.props.theme;var style={};if(theme){var borderStyling=\"1px solid \".concat(_this.state.isRecording?theme.primaryColor:\"gray\");style.border=borderStyling;style.outline=borderStyling;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"canvas\",{ref:_this.canvasRef,width:\"500\",height:\"100\",style:{border:'1px solid #000'}}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{id:\"record\",onClick:_this.state.isRecording?_this.stopRecording:_this.startRecording,style:style},_this.state.isRecording?'Stop Recording':'Start Recording'),/*#__PURE__*/React.createElement(\"button\",{id:\"reset\",onClick:_this.resetRecording,style:style},\"Reset\"),/*#__PURE__*/React.createElement(\"button\",{id:\"download\",onClick:_this.downloadRecording,style:style},\"Download\"),_this.state.audioUrl&&/*#__PURE__*/React.createElement(\"audio\",{id:\"audio\",controls:true,src:_this.state.audioUrl,style:{marginTop:'10px',width:'100%'}})));};_this.state={isRecording:false,mediaRecorder:null,audioBlob:null,chunks:[],audioUrl:null,audioData:null,analyser:null,animationId:null};_this.canvasRef=React.createRef();return _this;}_createClass(StreamlitAudioRecorder,[{key:\"componentDidMount\",value:function componentDidMount(){// Initialize canvas with a straight line\nif(this.canvasRef.current){var canvas=this.canvasRef.current;var canvasCtx=canvas.getContext('2d');if(canvasCtx){canvasCtx.fillStyle='rgb(200, 200, 200)';canvasCtx.fillRect(0,0,canvas.width,canvas.height);canvasCtx.lineWidth=2;canvasCtx.strokeStyle='rgb(0, 0, 0)';canvasCtx.beginPath();canvasCtx.moveTo(0,canvas.height/2);canvasCtx.lineTo(canvas.width,canvas.height/2);canvasCtx.stroke();}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.state.animationId){cancelAnimationFrame(this.state.animationId);}}}]);return StreamlitAudioRecorder;}(StreamlitComponentBase);export default withStreamlitConnection(StreamlitAudioRecorder);Streamlit.setComponentReady();Streamlit.setFrameHeight();","map":{"version":3,"sources":["/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/src/StreamlitAudioRecorder.tsx"],"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","StreamlitAudioRecorder","props","canvasRef","drawWaveform","state","analyser","current","canvas","canvasCtx","getContext","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","isRecording","animationId","cancelAnimationFrame","requestAnimationFrame","setState","getByteTimeDomainData","fillStyle","fillRect","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","startRecording","navigator","mediaDevices","getUserMedia","audio","channelCount","sampleRate","echoCancellation","noiseSuppression","autoGainControl","stream","audioContext","AudioContext","source","createMediaStreamSource","createAnalyser","connect","mediaRecorder","MediaRecorder","mimeType","audioBitsPerSecond","ondataavailable","e","data","size","prev","chunks","onstop","blob","Blob","type","audioBlob","audioUrl","URL","createObjectURL","arrayBuffer","then","buffer","uint8Array","setComponentValue","arr","Object","fromEntries","entries","start","console","error","stopRecording","stop","getTracks","forEach","track","resetRecording","audioData","downloadRecording","datetime","Date","toLocaleString","replace","filename","a","document","createElement","style","display","href","download","body","appendChild","click","removeChild","render","theme","borderStyling","primaryColor","border","outline","marginTop","createRef","setComponentReady","setFrameHeight"],"mappings":"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","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\ninterface State {\n  isRecording: boolean\n  mediaRecorder: MediaRecorder | null\n  audioBlob: Blob | null\n  chunks: Blob[]\n  audioUrl: string | null\n  audioData: Float32Array | null\n  analyser: AnalyserNode | null\n  animationId: number | null\n}\n\nclass StreamlitAudioRecorder extends StreamlitComponentBase {\n  private canvasRef: React.RefObject<HTMLCanvasElement | null>\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      isRecording: false,\n      mediaRecorder: null,\n      audioBlob: null,\n      chunks: [],\n      audioUrl: null,\n      audioData: null,\n      analyser: null,\n      animationId: null\n    }\n    this.canvasRef = React.createRef<HTMLCanvasElement | null>()\n  }\n\n  componentDidMount() {\n    // Initialize canvas with a straight line\n    if (this.canvasRef.current) {\n      const canvas = this.canvasRef.current\n      const canvasCtx = canvas.getContext('2d')\n      if (canvasCtx) {\n        canvasCtx.fillStyle = 'rgb(200, 200, 200)'\n        canvasCtx.fillRect(0, 0, canvas.width, canvas.height)\n        canvasCtx.lineWidth = 2\n        canvasCtx.strokeStyle = 'rgb(0, 0, 0)'\n        canvasCtx.beginPath()\n        canvasCtx.moveTo(0, canvas.height / 2)\n        canvasCtx.lineTo(canvas.width, canvas.height / 2)\n        canvasCtx.stroke()\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.animationId) {\n      cancelAnimationFrame(this.state.animationId)\n    }\n  }\n\n  drawWaveform = () => {\n    if (this.state.analyser && this.canvasRef.current) {\n      const canvas = this.canvasRef.current\n      const canvasCtx = canvas.getContext('2d')\n      const bufferLength = this.state.analyser.frequencyBinCount\n      const dataArray = new Uint8Array(bufferLength)\n\n      const draw = () => {\n        if (!this.state.isRecording) {\n          if (this.state.animationId) {\n            cancelAnimationFrame(this.state.animationId)\n          }\n          return\n        }\n\n        const animationId = requestAnimationFrame(draw)\n        this.setState({ animationId })\n\n        this.state.analyser!.getByteTimeDomainData(dataArray)\n\n        if (canvasCtx) {\n          canvasCtx.fillStyle = 'rgb(200, 200, 200)'\n          canvasCtx.fillRect(0, 0, canvas.width, canvas.height)\n          canvasCtx.lineWidth = 2\n          canvasCtx.strokeStyle = 'rgb(0, 0, 0)'\n          canvasCtx.beginPath()\n\n          const sliceWidth = (canvas.width * 1.0) / bufferLength\n          let x = 0\n\n          for (let i = 0; i < bufferLength; i++) {\n            const v = dataArray[i] / 128.0\n            const y = (v * canvas.height) / 2\n\n            if (i === 0) {\n              canvasCtx.moveTo(x, y)\n            } else {\n              canvasCtx.lineTo(x, y)\n            }\n\n            x += sliceWidth\n          }\n\n          canvasCtx.lineTo(canvas.width, canvas.height / 2)\n          canvasCtx.stroke()\n        }\n      }\n\n      draw()\n    }\n  }\n\n  startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          channelCount: 1,\n          sampleRate: 44100,\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      })\n\n      const audioContext = new AudioContext()\n      const source = audioContext.createMediaStreamSource(stream)\n      const analyser = audioContext.createAnalyser()\n      source.connect(analyser)\n      \n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'audio/webm;codecs=opus',\n        audioBitsPerSecond: 128000\n      })\n\n      mediaRecorder.ondataavailable = (e: BlobEvent) => {\n        if (e.data.size > 0) {\n          this.setState((prev: State) => ({\n            chunks: [...prev.chunks, e.data]\n          }))\n        }\n      }\n\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(this.state.chunks, { type: 'audio/webm;codecs=opus' })\n        \n        // Update UI state\n        this.setState({ \n          chunks: [], \n          audioBlob: blob,\n          isRecording: false,\n          mediaRecorder: null,\n          audioUrl: URL.createObjectURL(blob)\n        })\n        \n        // Convert to array and send in original format\n        blob.arrayBuffer().then(buffer => {\n          const uint8Array = new Uint8Array(buffer)\n          Streamlit.setComponentValue({\n            arr: Object.fromEntries([...uint8Array.entries()])\n          })\n        })\n      }\n\n      mediaRecorder.start(100)\n      this.setState({ mediaRecorder, isRecording: true, analyser }, this.drawWaveform)\n\n    } catch (err) {\n      console.error(\"Error accessing microphone:\", err)\n    }\n  }\n\n  stopRecording = () => {\n    if (this.state.mediaRecorder && this.state.isRecording) {\n      this.state.mediaRecorder.stop()\n      this.state.mediaRecorder.stream.getTracks().forEach((track: MediaStreamTrack) => track.stop())\n      if (this.state.animationId) {\n        cancelAnimationFrame(this.state.animationId)\n      }\n    }\n  }\n\n  resetRecording = (): void => {\n    if (this.state.animationId) {\n      cancelAnimationFrame(this.state.animationId)\n    }\n\n    this.setState({\n      isRecording: false,\n      audioBlob: null,\n      chunks: [],\n      audioUrl: null,\n      audioData: null,\n      analyser: null,\n      animationId: null\n    })\n    Streamlit.setComponentValue(null)\n  }\n\n  downloadRecording = (): void => {\n    if (this.state.audioBlob) {\n      const datetime = new Date().toLocaleString()\n        .replace(/[\\s,]/g, '')\n        .replace(/_/g, '')\n      const filename = `streamlit_audio_${datetime}.webm`\n\n      const a = document.createElement('a')\n      a.style.display = 'none'\n      a.href = URL.createObjectURL(this.state.audioBlob)\n      a.download = filename\n      document.body.appendChild(a)\n      a.click()\n      document.body.removeChild(a)\n    }\n  }\n\n  public render = (): ReactNode => {\n    const theme = this.props.theme\n    const style: React.CSSProperties = {}\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isRecording ? theme.primaryColor : \"gray\"\n      }`\n      style.border = borderStyling\n      style.outline = borderStyling\n    }\n\n    return (\n      <div>\n        <canvas \n          ref={this.canvasRef} \n          width=\"500\" \n          height=\"100\" \n          style={{ border: '1px solid #000' }}\n        />\n        <div>\n          <button \n            id=\"record\" \n            onClick={this.state.isRecording ? this.stopRecording : this.startRecording}\n            style={style}\n          >\n            {this.state.isRecording ? 'Stop Recording' : 'Start Recording'}\n          </button>\n          <button id=\"reset\" onClick={this.resetRecording} style={style}>\n            Reset\n          </button>\n          <button id=\"download\" onClick={this.downloadRecording} style={style}>\n            Download\n          </button>\n          {this.state.audioUrl && (\n            <audio\n              id=\"audio\"\n              controls\n              src={this.state.audioUrl}\n              style={{ marginTop: '10px', width: '100%' }}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(StreamlitAudioRecorder)\n\nStreamlit.setComponentReady()\nStreamlit.setFrameHeight()\n"]},"metadata":{},"sourceType":"module"}