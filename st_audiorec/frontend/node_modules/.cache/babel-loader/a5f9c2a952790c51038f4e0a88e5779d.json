{"ast":null,"code":"import _objectSpread from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import React from\"react\";var StreamlitAudioRecorder=/*#__PURE__*/function(_StreamlitComponentBa){_inherits(StreamlitAudioRecorder,_StreamlitComponentBa);var _super=_createSuper(StreamlitAudioRecorder);function StreamlitAudioRecorder(props){var _this;_classCallCheck(this,StreamlitAudioRecorder);_this=_super.call(this,props);_this.chunks=[];_this.audioContext=null;_this.analyser=null;_this.animationId=null;_this.canvasRef=void 0;_this.drawWaveform=function(){var canvas=_this.canvasRef.current;if(!canvas||!_this.analyser)return;var canvasCtx=canvas.getContext('2d');if(!canvasCtx)return;var bufferLength=_this.analyser.frequencyBinCount;var dataArray=new Uint8Array(bufferLength);var draw=function draw(){_this.animationId=requestAnimationFrame(draw);_this.analyser.getByteTimeDomainData(dataArray);canvasCtx.fillStyle='rgb(200, 200, 200)';canvasCtx.fillRect(0,0,canvas.width,canvas.height);canvasCtx.lineWidth=2;canvasCtx.strokeStyle='rgb(0, 0, 0)';canvasCtx.beginPath();var sliceWidth=canvas.width*1.0/bufferLength;var x=0;for(var i=0;i<bufferLength;i++){var v=dataArray[i]/128.0;var y=v*canvas.height/2;if(i===0){canvasCtx.moveTo(x,y);}else{canvasCtx.lineTo(x,y);}x+=sliceWidth;}canvasCtx.lineTo(canvas.width,canvas.height/2);canvasCtx.stroke();};draw();};_this.startRecording=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var stream,source,mediaRecorder;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.mediaDevices.getUserMedia({audio:{channelCount:1,sampleRate:44100,echoCancellation:true,noiseSuppression:true,autoGainControl:true}});case 3:stream=_context2.sent;// Set up audio context and analyser for visualization\n_this.audioContext=new AudioContext();source=_this.audioContext.createMediaStreamSource(stream);_this.analyser=_this.audioContext.createAnalyser();_this.analyser.fftSize=2048;source.connect(_this.analyser);mediaRecorder=new MediaRecorder(stream,{mimeType:'audio/webm',audioBitsPerSecond:128000});_this.chunks=[];mediaRecorder.ondataavailable=function(e){if(e.data.size>0){_this.chunks.push(e.data);}};mediaRecorder.onstop=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var blob,reader;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Create blob and update state immediately\nblob=new Blob(_this.state.chunks,{type:'audio/webm;codecs=opus'});_this.setState({chunks:[],audioBlob:blob,isRecording:false,mediaRecorder:null});// Convert to base64 after state is updated\nreader=new FileReader();reader.onloadend=function(){if(reader.result){var base64Audio=reader.result.split(',')[1];// Use the exact same data structure as before\nvar arr=new Uint8Array(atob(base64Audio).split('').map(function(c){return c.charCodeAt(0);}));Streamlit.setComponentValue({arr:Object.fromEntries(_toConsumableArray(arr.entries()))});}};reader.readAsDataURL(blob);case 5:case\"end\":return _context.stop();}}},_callee);}));mediaRecorder.start(100);_this.setState({mediaRecorder:mediaRecorder,isRecording:true});_this.drawWaveform();_context2.next=21;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](0);console.error(\"Error accessing microphone:\",_context2.t0);case 21:case\"end\":return _context2.stop();}}},_callee2,null,[[0,18]]);}));_this.stopRecording=function(){if(_this.state.mediaRecorder&&_this.state.isRecording){_this.state.mediaRecorder.stop();_this.state.mediaRecorder.stream.getTracks().forEach(function(track){return track.stop();});if(_this.audioContext){_this.audioContext.close();}}};_this.resetRecording=function(){if(_this.state.mediaRecorder){_this.state.mediaRecorder.stream.getTracks().forEach(function(track){return track.stop();});}if(_this.audioContext){_this.audioContext.close();}if(_this.animationId){cancelAnimationFrame(_this.animationId);}if(_this.state.audioUrl){URL.revokeObjectURL(_this.state.audioUrl);}_this.chunks=[];_this.setState({isRecording:false,audioBlob:null,audioUrl:null,mediaRecorder:null,audioData:[]});Streamlit.setComponentValue(null);};_this.render=function(){var theme=_this.props.theme;var style={};if(theme){var borderStyling=\"1px solid \".concat(_this.state.isRecording?theme.primaryColor:\"gray\");style.border=borderStyling;style.outline=borderStyling;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{marginBottom:'1rem'}},/*#__PURE__*/React.createElement(\"button\",{id:\"record\",onClick:_this.state.isRecording?_this.stopRecording:_this.startRecording,style:_objectSpread(_objectSpread({},style),{},{marginRight:'0.5rem',padding:'0.5rem 1rem',cursor:'pointer'})},_this.state.isRecording?'Stop Recording':'Start Recording'),/*#__PURE__*/React.createElement(\"button\",{id:\"reset\",onClick:_this.resetRecording,style:_objectSpread(_objectSpread({},style),{},{padding:'0.5rem 1rem',cursor:_this.state.isRecording?'not-allowed':'pointer'}),disabled:_this.state.isRecording},\"Reset\")),/*#__PURE__*/React.createElement(\"canvas\",{ref:_this.canvasRef,width:\"300\",height:\"100\",style:{display:_this.state.isRecording?'block':'none',border:'1px solid #ccc',marginBottom:'1rem',borderRadius:'4px'}}),_this.state.audioUrl&&/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(\"audio\",{id:\"audio\",controls:true,src:_this.state.audioUrl,style:{width:'100%',height:'50px',borderRadius:'4px'},preload:\"metadata\"})));};_this.state={isRecording:false,mediaRecorder:null,audioBlob:null,audioUrl:null,audioData:[]};_this.canvasRef=React.createRef();return _this;}_createClass(StreamlitAudioRecorder,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.animationId){cancelAnimationFrame(this.animationId);}if(this.audioContext){this.audioContext.close();}if(this.state.audioUrl){URL.revokeObjectURL(this.state.audioUrl);}}}]);return StreamlitAudioRecorder;}(StreamlitComponentBase);export default withStreamlitConnection(StreamlitAudioRecorder);Streamlit.setComponentReady();Streamlit.setFrameHeight();","map":{"version":3,"sources":["/home/jani/readout_bot/libs/streamlit-audio-recorder/st_audiorec/frontend/src/StreamlitAudioRecorder.tsx"],"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","StreamlitAudioRecorder","props","chunks","audioContext","analyser","animationId","canvasRef","drawWaveform","canvas","current","canvasCtx","getContext","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","startRecording","navigator","mediaDevices","getUserMedia","audio","channelCount","sampleRate","echoCancellation","noiseSuppression","autoGainControl","stream","AudioContext","source","createMediaStreamSource","createAnalyser","fftSize","connect","mediaRecorder","MediaRecorder","mimeType","audioBitsPerSecond","ondataavailable","e","data","size","push","onstop","blob","Blob","state","type","setState","audioBlob","isRecording","reader","FileReader","onloadend","result","base64Audio","split","arr","atob","map","c","charCodeAt","setComponentValue","Object","fromEntries","entries","readAsDataURL","start","console","error","stopRecording","stop","getTracks","forEach","track","close","resetRecording","cancelAnimationFrame","audioUrl","URL","revokeObjectURL","audioData","render","theme","style","borderStyling","primaryColor","border","outline","marginBottom","marginRight","padding","cursor","display","borderRadius","marginTop","createRef","setComponentReady","setFrameHeight"],"mappings":"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","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\ninterface State {\n  isRecording: boolean\n  mediaRecorder: MediaRecorder | null\n  audioBlob: Blob | null\n  audioUrl: string | null\n  audioData: number[]\n}\n\nclass StreamlitAudioRecorder extends StreamlitComponentBase {\n  private chunks: Blob[] = [];\n  private audioContext: AudioContext | null = null;\n  private analyser: AnalyserNode | null = null;\n  private animationId: number | null = null;\n  private canvasRef: React.RefObject<HTMLCanvasElement | null>;\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      isRecording: false,\n      mediaRecorder: null,\n      audioBlob: null,\n      audioUrl: null,\n      audioData: []\n    }\n    this.canvasRef = React.createRef<HTMLCanvasElement>();\n  }\n\n  componentWillUnmount() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n    if (this.audioContext) {\n      this.audioContext.close();\n    }\n    if (this.state.audioUrl) {\n      URL.revokeObjectURL(this.state.audioUrl);\n    }\n  }\n\n  drawWaveform = () => {\n    const canvas = this.canvasRef.current;\n    if (!canvas || !this.analyser) return;\n\n    const canvasCtx = canvas.getContext('2d');\n    if (!canvasCtx) return;\n\n    const bufferLength = this.analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const draw = () => {\n      this.animationId = requestAnimationFrame(draw);\n      this.analyser!.getByteTimeDomainData(dataArray);\n\n      canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n      canvasCtx.beginPath();\n\n      const sliceWidth = canvas.width * 1.0 / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * canvas.height / 2;\n\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\n      canvasCtx.stroke();\n    };\n\n    draw();\n  };\n\n  startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          channelCount: 1,\n          sampleRate: 44100,\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n\n      // Set up audio context and analyser for visualization\n      this.audioContext = new AudioContext();\n      const source = this.audioContext.createMediaStreamSource(stream);\n      this.analyser = this.audioContext.createAnalyser();\n      this.analyser.fftSize = 2048;\n      source.connect(this.analyser);\n\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'audio/webm',\n        audioBitsPerSecond: 128000\n      });\n\n      this.chunks = [];\n\n      mediaRecorder.ondataavailable = (e: BlobEvent) => {\n        if (e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      mediaRecorder.onstop = async () => {\n        // Create blob and update state immediately\n        const blob = new Blob(this.state.chunks, { type: 'audio/webm;codecs=opus' })\n        this.setState({ \n          chunks: [], \n          audioBlob: blob,\n          isRecording: false,\n          mediaRecorder: null\n        })\n\n        // Convert to base64 after state is updated\n        const reader = new FileReader()\n        reader.onloadend = () => {\n          if (reader.result) {\n            const base64Audio = (reader.result as string).split(',')[1]\n            // Use the exact same data structure as before\n            const arr = new Uint8Array(atob(base64Audio).split('').map(c => c.charCodeAt(0)))\n            Streamlit.setComponentValue({ arr: Object.fromEntries([...arr.entries()]) })\n          }\n        }\n        reader.readAsDataURL(blob)\n      }\n\n      mediaRecorder.start(100);\n      this.setState({ mediaRecorder, isRecording: true });\n      this.drawWaveform();\n\n    } catch (err) {\n      console.error(\"Error accessing microphone:\", err);\n    }\n  };\n\n  stopRecording = () => {\n    if (this.state.mediaRecorder && this.state.isRecording) {\n      this.state.mediaRecorder.stop();\n      this.state.mediaRecorder.stream.getTracks().forEach((track: MediaStreamTrack) => track.stop());\n      if (this.audioContext) {\n        this.audioContext.close();\n      }\n    }\n  };\n\n  resetRecording = (): void => {\n    if (this.state.mediaRecorder) {\n      this.state.mediaRecorder.stream.getTracks().forEach((track: MediaStreamTrack) => track.stop());\n    }\n    if (this.audioContext) {\n      this.audioContext.close();\n    }\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n    if (this.state.audioUrl) {\n      URL.revokeObjectURL(this.state.audioUrl);\n    }\n    this.chunks = [];\n    this.setState({\n      isRecording: false,\n      audioBlob: null,\n      audioUrl: null,\n      mediaRecorder: null,\n      audioData: []\n    });\n    Streamlit.setComponentValue(null);\n  };\n\n  public render = (): ReactNode => {\n    const theme = this.props.theme;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isRecording ? theme.primaryColor : \"gray\"\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return (\n      <div>\n        <div style={{ marginBottom: '1rem' }}>\n          <button \n            id=\"record\" \n            onClick={this.state.isRecording ? this.stopRecording : this.startRecording}\n            style={{\n              ...style,\n              marginRight: '0.5rem',\n              padding: '0.5rem 1rem',\n              cursor: 'pointer'\n            }}\n          >\n            {this.state.isRecording ? 'Stop Recording' : 'Start Recording'}\n          </button>\n          <button \n            id=\"reset\" \n            onClick={this.resetRecording} \n            style={{\n              ...style,\n              padding: '0.5rem 1rem',\n              cursor: this.state.isRecording ? 'not-allowed' : 'pointer'\n            }}\n            disabled={this.state.isRecording}\n          >\n            Reset\n          </button>\n        </div>\n        \n        <canvas \n          ref={this.canvasRef} \n          width=\"300\" \n          height=\"100\" \n          style={{ \n            display: this.state.isRecording ? 'block' : 'none',\n            border: '1px solid #ccc',\n            marginBottom: '1rem',\n            borderRadius: '4px'\n          }}\n        />\n        \n        {this.state.audioUrl && (\n          <div style={{ marginTop: '1rem' }}>\n            <audio\n              id=\"audio\"\n              controls\n              src={this.state.audioUrl}\n              style={{ \n                width: '100%',\n                height: '50px',\n                borderRadius: '4px'\n              }}\n              preload=\"metadata\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStreamlitConnection(StreamlitAudioRecorder);\n\nStreamlit.setComponentReady();\nStreamlit.setFrameHeight();\n"]},"metadata":{},"sourceType":"module"}